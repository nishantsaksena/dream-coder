----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    17:50:03 04/07/2014 
-- Design Name: 
-- Module Name:    top_module - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity top_module is
     generic (N : integer := 4);
	 Port ( 
			  clk : in  STD_LOGIC;
			  clr : in STD_LOGIC;	
           go : in  STD_LOGIC;
			  mem_on : in STD_LOGIC;
			  wr_ram : in std_logic;
			  rd_ram : in std_logic;
			  wr_ram_address : in STD_LOGIC_vector(7 downto 0);
			  rd_ram_address : in STD_LOGIC_vector(7 downto 0);
			  address_sel_1 : in STD_LOGIC_vector(N-1 downto 0);
			  address_sel_2 : in STD_LOGIC_vector(N-1 downto 0);
			  gcd_output : out STD_LOGIC_VECTOR(N-1 downto 0)
			  
			  
			  
			 );
end top_module;

architecture top_module of top_module is
	
	component gcd_module
	generic (N : integer := 4);
	port
		(
			  clk : in  STD_LOGIC;
           clr : in  STD_LOGIC;
           xin : in  STD_LOGIC_VECTOR(N-1 downto 0);
           yin : in  STD_LOGIC_VECTOR(N-1 downto 0);
           go : in  STD_LOGIC;
           gcd_out : out  STD_LOGIC_VECTOR(N-1 downto 0)
		);
		end component;
		
	component rom
	generic (N : integer := 4);
	port
		(	  	
			  address_sel_1 : in STD_LOGIC_vector(N-1 downto 0);
			  address_sel_2 : in STD_LOGIC_vector(N-1 downto 0);	
           mem_on : in STD_LOGIC;
			  data_out_1 : out  STD_LOGIC_VECTOR(N-1 downto 0);
			  data_out_2 : out  STD_LOGIC_VECTOR(N-1 downto 0)
		);
	end component;
	
	component DRAM_1
	port
		(
			  clock : in STD_LOGIC;
			  wr_address : in  STD_LOGIC_VECTOR(7 DOWNTO 0);
           rd_address : in  STD_LOGIC_VECTOR(7 DOWNTO 0);
           wr : in  STD_LOGIC;
           rd : in  STD_LOGIC;
           data_in : in  STD_LOGIC_VECTOR(3 DOWNTO 0);
           data_out : out  STD_LOGIC_VECTOR(3 DOWNTO 0)
		);
	end component;
	
	
	signal temp1,temp2 : std_logic_vector(N-1 downto 0);
	signal temp3,temp4 : std_logic_vector(3 downto 0);
begin

	
	h1:gcd_module
	generic map(N => 4)
	port map (
					clk => clk,
					clr => clr,
					xin => temp1,
					yin => temp2,
					go => go,
					gcd_out => temp3	
				);
				
	h2:rom
	generic map(N => 4)
	port map (
				address_sel_1 => address_sel_1,
				address_sel_2 => address_sel_2,
				mem_on => mem_on,
				data_out_1 => temp1,
				data_out_2 => temp2	
				);
				
	h3:DRAM_1
	port map (
				
			  clock => clk,
			  wr_address => wr_ram_address,
           rd_address => rd_ram_address,
           wr => wr_ram,
           rd => rd_ram,
           data_in => temp3,
           data_out => gcd_output				
				);
	
				

				
end top_module;

